// The SWAP Test
// 2. Quantum Fingerprinting without Shared Keys
// https://arxiv.org/pdf/quant-ph/0102001.pdf 

// q and p are messages, we want to check if they are equal. r is initialized to all zeroes
// r is one qubit. q and p are n qubits.
method SWAPTest(q: Q[1], p: Q[1], r: Q[1]) returns (y:nat, prob:real)
    requires { r[0] : Nor ↦ |0⟩ }
    requires { q[0] : EN ↦ a|0⟩ + b|1⟩ }
    requires { p[0] : EN ↦ c|0⟩ + d|1⟩ }
    ensures { a = c && b = d ==> y == 1 ==> prob == 0 }
    ensures { a != c || b != d ==> y == 1 ==> prob = (|ad-bc|^2 + |bc - ad|^2)/2 } //we need to define norm of two states.
{
    r[0] *= H;

    // controlled SWAP (controlled by first qubit of r)
    if r[0] // is this a measurment, so wo just do if r[0]
    {
      if p[0] { q[0] *= q[0] +1; }
      if q[0] { p[0] *= p[0] +1; }
      if p[0] { q[0] *= q[0] +1; }
      assert {p[0],q[0] : En ↦ (a|0⟩ + b|1⟩)  ⊗ (c|0⟩ + d|1⟩)} //this might be hard to do, we can do testing like expanding the tensor out and see if this will be equal
                                                          //this might not be necessary, we can just use the expanded formatas : ac|00⟩ + ad|01⟩ + bc|10⟩ + bd|11⟩
    }
    assert {r[0],p[0],q[0] : En ↦ 1/sqrt(2) (|0⟩ ((c|0⟩ + d|1⟩)  ⊗ (a|0⟩ + b|1⟩)) + |1⟩((a|0⟩ + b|1⟩)  ⊗ (c|0⟩ + d|1⟩)))}
    //or assert {r[0],p[0],q[0] : En ↦ 1/sqrt(2) (ac|000⟩ + ad|010⟩ + bc|001⟩ + bd|011⟩ + ac|100⟩ + ad|101⟩ + bc|110⟩ + bd|111⟩)

    r[0] *= H; // A typical quantum state projection. turning information to the phase.

    assert {r[0],p[0],q[0] : En ↦ 1/2 (ac|000⟩ + ac|100⟩ + ad|010⟩ + ad|110⟩ + bc|001⟩ + bc|101⟩ + bd|011⟩ + bd|111⟩ + ac|000⟩ - ac|100⟩ + ad|001⟩ - ad|101⟩ + bc|010⟩ - bc|110⟩ + bd|011⟩ - bd|111⟩)

    assert {r[0],p[0],q[0] : En ↦ 1/2 (ac|000⟩ + ad|010⟩ + bc|001⟩ + bd|011⟩ + ac|000⟩ + ad|001⟩ + bc|010⟩ + bd|011⟩) + ((ad-bc)|110⟩ + (bc - ad)|101⟩)}
    
    y, prob *= measure(r); //if a=c and b = d, then ad-bc = 0, so the prob is 0. if a != c || b != d, the probably will be (|ad-bc|^2 + |bc - ad|^2)/2
}
