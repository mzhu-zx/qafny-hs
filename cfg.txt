%right '->'

AST
  : toplevels

toplevels
  : many(toplevel)

toplevel
  : dafny
  | "method" id parens(bindings) returns conds opt(block)

returns
  : {- empty -}
  | "returns" '(' bindings ')'

conds
  : many(cond)

cond
  : "requires" expr
  | "ensures" expr
  | "invariant" expr
  | "separates" partition

bindings
  : manyComma(binding)

binding
  : id ':' ty

ty
  : baseTy
  | baseTy '->' ty
  | tuple(ty) '->' ty %shift

baseTy
  : "nat"
  | "int"
  | "measured"
  | "bool"
  | "seq" '<' ty '>'
  | "qreg" '[' digits ']'
  | "qreg" '[' id ']'

qty
  : "nor"
  | "had"
  | "en"
  | "en01"

block
  : '{' stmts '}'

stmts
  : many(stmt)

stmt
  : dafny
  | "assert" expr ';'
  | "var" binding ';'
  | "var" binding ":=" expr ';'
  | id ":=" expr ';'
  | partition "*=" expr ';'
  | "if" '(' guardExpr ')' cond block
  | "for" id "in" '[' expr ".." expr ']' "with" guardExpr conds block
  | id tuple(argExpr) ';'

splitAt
  : "split" "at" expr

guardExpr
  : partition opt(splitAt)

partition
  : manyComma(range)

range
  : id '[' expr ".." expr ']'

spec
  : '{' partition ':' qty "↦" list(qspec) '}'
  | '{' partition ':' qty "↦" qspec '}'

nullableId
  : id
  | {- empty -}

intv
  : '[' expr ".." expr ']'

qspec
  : "⊗" nullableId '.' pspec
  | "⊗" nullableId '.' expr
  | "Σ" id "∈" intv '.' ampExp pspec tuple(expr)
  | "Σ" id "∈" intv '.' ampExp pspec "⊗" id "∈" intv '.' tuple(expr)
  | '_'

ampExp
  : {- empty -}
  | "isqrt" '(' expr ',' expr ')'
  | "sin" '(' expr ')'
  | "cos" '(' expr ')'

pspec
  : {- empty -}
  | "ω" '(' expr ',' expr ')' '~'
  | "Ω" id "∈" '[' expr ".." expr ']' '.' '(' expr ',' expr ')' '~'

pbinder
  : '_'
  | "ω" '(' id ',' id ')'
  | "Ω" id "∈" '[' expr ".." expr ']' '.' '(' id ',' id ')'

mayTuple
  : p
  | tuple(p)

tuple
  : '(' manyComma(p) ')'

list
  : '[' manyComma(p) ']'

expr
  : '_'
  | spec
  | qops
  | "measure" partition
  | "not" atomic
  | "nor" '(' atomic ',' digits ')'
  | "repr" parens(range)
  | logicOrExp
  | lamExpr

argExpr
  : expr
  | range

lamExpr
  : "λ" lamBinder "=>" pspec tuple(expr)

lamBinder
  : pbinder '~' tuple(id)
  | tuple(id)

qops
  : "H"
  | "Qft"
  | "iQft"

logicOrExp
  : logicAndExp "||" logicOrExp
  | logicAndExp

logicAndExp
  : cmpExpr "&&" logicAndExp
  | cmpExpr

cmpExpr
  : arithExpr many(cmpPartial)

cmpPartial
  : cmp arithExpr

cmp
  : '>'
  | '<'
  | ">="
  | "<="
  | "=="

arithExpr
  : atomic arith arithExpr
  | atomic

arith
  : '+'
  | '-'
  | '*'
  | '\%'

atomic
  : digits
  | id tuple(expr)
  | id
  | '(' expr ')'

parens
  : '(' p ')'

braces
  : '{' p '}'

many
  : many_(p)

many_
  : {- empty -}
  | many_(p) p

manyComma
  : manyComma_(p) %shift
  | {- empty -}

manyComma_
  : manyComma_(p) ',' p
  | p

opt
  : {- empty -}
  | p